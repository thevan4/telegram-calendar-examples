{
  "swagger": "2.0",
  "info": {
    "title": "telegram_calendar.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CalendarService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/apply-new-settings": {
      "post": {
        "operationId": "CalendarService_ApplyNewSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "forced choice - this flag will set the default value (zero, zero date, empty string.\n Without this flag, null values will be ignored.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/calendarNewSettingsRequest"
            }
          }
        ],
        "tags": [
          "CalendarService"
        ]
      }
    },
    "/generate-calendar": {
      "post": {
        "operationId": "CalendarService_GenerateCalendar",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/calendarGenerateCalendarResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/calendarGenerateCalendarRequest"
            }
          }
        ],
        "tags": [
          "CalendarService"
        ]
      }
    },
    "/get-settings": {
      "get": {
        "operationId": "CalendarService_GetSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/calendarGetSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CalendarService"
        ]
      }
    }
  },
  "definitions": {
    "InlineKeyboardMarkupInlineKeyboardButton": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "callbackData": {
          "type": "string"
        }
      }
    },
    "InlineKeyboardMarkupInlineKeyboardRow": {
      "type": "object",
      "properties": {
        "buttons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/InlineKeyboardMarkupInlineKeyboardButton"
          }
        }
      }
    },
    "NewSettingsRequestDayName": {
      "type": "object",
      "properties": {
        "dayName": {
          "type": "string"
        }
      }
    },
    "NewSettingsRequestDayNames": {
      "type": "object",
      "properties": {
        "dayNames": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/NewSettingsRequestDayName"
          },
          "title": "if set, expect 7 days"
        },
        "forceChoice": {
          "type": "boolean"
        }
      }
    },
    "NewSettingsRequestHomeButtonForBeauty": {
      "type": "object",
      "properties": {
        "homeButtonForBeauty": {
          "type": "string"
        },
        "forceChoice": {
          "type": "boolean"
        }
      }
    },
    "NewSettingsRequestMonthName": {
      "type": "object",
      "properties": {
        "monthName": {
          "type": "string"
        }
      }
    },
    "NewSettingsRequestMonthNames": {
      "type": "object",
      "properties": {
        "monthNames": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/NewSettingsRequestMonthName"
          },
          "title": "if set, expect 12 months"
        },
        "forceChoice": {
          "type": "boolean"
        }
      }
    },
    "NewSettingsRequestPostfixForCurrentDay": {
      "type": "object",
      "properties": {
        "postfixForCurrentDay": {
          "type": "string"
        },
        "forceChoice": {
          "type": "boolean"
        }
      }
    },
    "NewSettingsRequestPostfixForNonSelectedDay": {
      "type": "object",
      "properties": {
        "postfixForNonSelectedDay": {
          "type": "string"
        },
        "forceChoice": {
          "type": "boolean"
        }
      }
    },
    "NewSettingsRequestPostfixForPickDay": {
      "type": "object",
      "properties": {
        "postfixForPickDay": {
          "type": "string"
        },
        "forceChoice": {
          "type": "boolean"
        }
      }
    },
    "NewSettingsRequestPrefixForCurrentDay": {
      "type": "object",
      "properties": {
        "prefixForCurrentDay": {
          "type": "string"
        },
        "forceChoice": {
          "type": "boolean"
        }
      }
    },
    "NewSettingsRequestPrefixForNonSelectedDay": {
      "type": "object",
      "properties": {
        "prefixForNonSelectedDay": {
          "type": "string"
        },
        "forceChoice": {
          "type": "boolean"
        }
      }
    },
    "NewSettingsRequestPrefixForPickDay": {
      "type": "object",
      "properties": {
        "prefixForPickDay": {
          "type": "string"
        },
        "forceChoice": {
          "type": "boolean"
        }
      }
    },
    "NewSettingsRequestUnselectableDays": {
      "type": "object",
      "properties": {
        "unselectableDays": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {}
          }
        },
        "forceChoice": {
          "type": "boolean"
        }
      }
    },
    "NewSettingsRequestUnselectableDaysAfterTime": {
      "type": "object",
      "properties": {
        "unselectableDaysAfterTime": {
          "type": "string",
          "format": "date-time"
        },
        "forceChoice": {
          "type": "boolean"
        }
      }
    },
    "NewSettingsRequestUnselectableDaysBeforeTime": {
      "type": "object",
      "properties": {
        "unselectableDaysBeforeTime": {
          "type": "string",
          "format": "date-time"
        },
        "forceChoice": {
          "type": "boolean"
        }
      }
    },
    "NewSettingsRequestYearsBackForChoose": {
      "type": "object",
      "properties": {
        "yearsBackForChoose": {
          "type": "string",
          "format": "int64"
        },
        "forceChoice": {
          "type": "boolean"
        }
      }
    },
    "NewSettingsRequestYearsForwardForChoose": {
      "type": "object",
      "properties": {
        "yearsForwardForChoose": {
          "type": "string",
          "format": "int64"
        },
        "forceChoice": {
          "type": "boolean"
        }
      }
    },
    "calendarGenerateCalendarRequest": {
      "type": "object",
      "properties": {
        "callbackPayload": {
          "type": "string",
          "description": "A calendar payload that may be empty at first startup. The system automatically generates payloads in response. For example: 'calendar/prm_00.07.2023'."
        },
        "currentTime": {
          "type": "string",
          "format": "date-time",
          "description": "Current time with timezone. In case of any errors (incorrect payload, internal failure, etc.) the calendar is generated for the date specified by the current date in the request."
        }
      }
    },
    "calendarGenerateCalendarResponse": {
      "type": "object",
      "properties": {
        "inlineKeyboardMarkup": {
          "$ref": "#/definitions/calendarInlineKeyboardMarkup",
          "title": "A message that fully complies with the documentation https://core.telegram.org/bots/api reply_markup (InlineKeyboardMarkup)"
        },
        "selectedDay": {
          "type": "string",
          "format": "date-time",
          "title": "user-selected day (optional)"
        }
      }
    },
    "calendarGetSettingsResponse": {
      "type": "object",
      "properties": {
        "yearsBackForChoose": {
          "type": "string",
          "format": "int64"
        },
        "yearsForwardForChoose": {
          "type": "string",
          "format": "int64"
        },
        "sumYearsForChoose": {
          "type": "string",
          "format": "int64"
        },
        "daysNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "monthNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "homeButtonForBeauty": {
          "type": "string"
        },
        "prefixForCurrentDay": {
          "type": "string"
        },
        "postfixForCurrentDay": {
          "type": "string"
        },
        "prefixForNonSelectedDay": {
          "type": "string"
        },
        "postfixForNonSelectedDay": {
          "type": "string"
        },
        "prefixForPickDay": {
          "type": "string"
        },
        "postfixForPickDay": {
          "type": "string"
        },
        "unselectableDaysBeforeTime": {
          "type": "string",
          "format": "date-time"
        },
        "unselectableDaysAfterTime": {
          "type": "string",
          "format": "date-time"
        },
        "unselectableDays": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {}
          }
        }
      }
    },
    "calendarInlineKeyboardMarkup": {
      "type": "object",
      "properties": {
        "inlineKeyboard": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/InlineKeyboardMarkupInlineKeyboardRow"
          }
        }
      }
    },
    "calendarNewSettingsRequest": {
      "type": "object",
      "properties": {
        "yearsBackForChoose": {
          "$ref": "#/definitions/NewSettingsRequestYearsBackForChoose"
        },
        "yearsForwardForChoose": {
          "$ref": "#/definitions/NewSettingsRequestYearsForwardForChoose"
        },
        "dayNames": {
          "$ref": "#/definitions/NewSettingsRequestDayNames"
        },
        "monthNames": {
          "$ref": "#/definitions/NewSettingsRequestMonthNames"
        },
        "homeButtonForBeauty": {
          "$ref": "#/definitions/NewSettingsRequestHomeButtonForBeauty"
        },
        "prefixForCurrentDay": {
          "$ref": "#/definitions/NewSettingsRequestPrefixForCurrentDay"
        },
        "postfixForCurrentDay": {
          "$ref": "#/definitions/NewSettingsRequestPostfixForCurrentDay"
        },
        "prefixForNonSelectedDay": {
          "$ref": "#/definitions/NewSettingsRequestPrefixForNonSelectedDay"
        },
        "postfixForNonSelectedDay": {
          "$ref": "#/definitions/NewSettingsRequestPostfixForNonSelectedDay"
        },
        "prefixForPickDay": {
          "$ref": "#/definitions/NewSettingsRequestPrefixForPickDay"
        },
        "postfixForPickDay": {
          "$ref": "#/definitions/NewSettingsRequestPostfixForPickDay"
        },
        "unselectableDaysBeforeTime": {
          "$ref": "#/definitions/NewSettingsRequestUnselectableDaysBeforeTime"
        },
        "unselectableDaysAfterTime": {
          "$ref": "#/definitions/NewSettingsRequestUnselectableDaysAfterTime"
        },
        "unselectableDays": {
          "$ref": "#/definitions/NewSettingsRequestUnselectableDays"
        }
      },
      "description": "forced choice - this flag will set the default value (zero, zero date, empty string.\n Without this flag, null values will be ignored."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
